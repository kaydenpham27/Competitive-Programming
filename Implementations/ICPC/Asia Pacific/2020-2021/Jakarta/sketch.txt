A: Comic Binge
Problem:
- N books, voi book i, andy mat ai hours, budi mat bi hours. ca 2 deu doc sach
theo thu tu tang dan. 
- Budi skip one book sau khi read 1 book. 
- Neu budi khogn skip book i-th, andi se khong duoc doc book i neu budi chua doc. 
- Ca 2 deu phai doc sach 1 va N. Andi muon doc tat ca cac sach, Budi se skip 
theo nhu rule. ca 2 phai doc het sach khi ket thuc. 
-> Tinh thoi gian it nhat de hoan thanh.

Idea:
- Bi <= 10 -> Thoi gian it nhat de B doc den N la 1000 * 10 = 1e4. 
- f[i] la khi bi dang tieu i hours thi 

B: Moon and Sun
Problem:
- construct 1 day A' khac A o 1 vi tri i, hoi co bnh vi tri i thoa man sao cho 
sun(A', |A'|) % 235813 = 0

C: Cul-De-Sac
- N dinh, N - 1 road -> Tree. 
- cul-de-sac la cac dinh leaves. 
- Each parade bat dau va ket thuc o 2 diem la va khong di qua doan road nao 2 lan 
- 2 parades khogn duoc share canh nhung duoc share dinh 
- neu parade di qua (ui, vi) -> gain wi happiness. 
-> Tinh maximum happiness. 

E:
- N dinh, latency message between u and v la d(u, v)
- cac city dc construct tu 1 -> N. 
- Neu city x dc construct khi economic good -> noi x voi tat ca 1 -> (x - 1)
- Neu khong thi x noi voi x - 1. 
- Neu E(x - 1) = 1 thi city x construct luc good. 
- Bottleneck = max latency = diameter. 

F: Shopping Changes
Problem:
- M friends + N banknotes, de N banknotes vao trong wallet ma khong thay doi thu tu
- Felix muon dat ntn de minimize inversion khi dat N banknotes vao. 
- Felix muon bo banknotes vao vi cua cac nguoi ban. 
- i-th friend co Li banknotes trong vi -> felix muon lam ntn de minize inversion 
sau khi bo change vao trong vi cua ban. 

Idea:
- 


K: Tree Beauty:
Problems:
- N dinh, 1 la root, pi la cha cua i. Moi dinh co mot gia tri beauty, ban dau = 0.
- 1 machine voi input la X, Y, K
-> Tat ca cac dinh v trong subtree u += Y/(K^d) voi d la d(u, v);
- co 2 op:
1. Dung machine voi X, Y, K;
2. Print sum beauty trong subtree X. 